{"remainingRequest":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/src/views/Reservation.vue?vue&type=style&index=0&id=0adad4fc&lang=css&scoped=true&","dependencies":[{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/src/views/Reservation.vue","mtime":1568018998420},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n.container {\n    display: flex;\n    justify-content: center;\n    background: transparent;\n}\n.form-layout {\n    width: 45%;\n    display: flex;\n    flex-direction: column;\n    border-radius: 3px;\n    background: white;\n    padding: 25px 25px 25px 25px;\n    box-shadow: 2px 2px black;\n}\n.buttons {\n  border: none;\n  width: auto;\n  height: 40px;\n  background-color: #17202a;\n  color: white;\n  border-radius: 25px;\n  box-shadow: 1px 1px #48c9b0;\n  margin: 10px 10px 0 10px;\n}\n.buttons:hover {\n  transition: transform 0.3s;\n  transform: scale(1.05);\n}\n.buttons:active {\n  transform: translateY(2px);\n  box-shadow: none;\n}  \n",{"version":3,"sources":["Reservation.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reservation.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"container\">\n        <h1>Page de réservations yo </h1>\n        <form class=\"form-layout\" action=\"\" method=\"post\">\n            <datetime v-model=\"date\"></datetime>\n        </form>\n    </div>\n</template>\n\n<style lang=\"css\" scoped>\n.container {\n    display: flex;\n    justify-content: center;\n    background: transparent;\n}\n.form-layout {\n    width: 45%;\n    display: flex;\n    flex-direction: column;\n    border-radius: 3px;\n    background: white;\n    padding: 25px 25px 25px 25px;\n    box-shadow: 2px 2px black;\n}\n.buttons {\n  border: none;\n  width: auto;\n  height: 40px;\n  background-color: #17202a;\n  color: white;\n  border-radius: 25px;\n  box-shadow: 1px 1px #48c9b0;\n  margin: 10px 10px 0 10px;\n}\n.buttons:hover {\n  transition: transform 0.3s;\n  transform: scale(1.05);\n}\n.buttons:active {\n  transform: translateY(2px);\n  box-shadow: none;\n}  \n</style>\n\n<script>\n//import ReservationService from '../services/ReservationsService.vue'\nimport DateTime from 'vue-datetime'\n\nexport default {\n    name: 'reservation',\n    components: {\n        datetime: DateTime\n    },\n    data() {\n        return {\n            id: this.$route.query.id,\n            form: {\n                name: \"\",\n                roomName: \"\",\n                date: \"\",\n                timeStart: \"\",\n                timeEnd: \"\"\n            }         \n        }\n    }\n    //si le prop create est défini comme true dans le parent, on affiche le bouton de création,\n    //sinon on affiche le bouton d'update et on pré-remplit le formulaire \n    /*\n    methods: {\n        createProjet: function(name, desc, datestart, dateend, cost, status)\n        {\n            ProjetService.createProjet(name, desc, datestart, dateend, cost, status);\n            this.$router.push('/projets');\n        },\n        updateProjet: function(name, desc, datestart, dateend, cost, status)\n        {\n            ProjetService.updateProjet(this.id , name, desc, datestart, dateend, cost, status);\n            this.$router.push('/projets');\n        }    \n    },\n    //si l'id est défini, alors on est sur la page update et on pré-remplit le formulaire avec les valeurs déja\n    //existantes\n    created() {\n        if(this.id !== undefined)\n        {\n            ProjetService.getProjet(this.id)\n            .then((data) =>\n            {\n                this.form = data;\n            })  \n        }\n    }*/\n}\n</script>"]}]}