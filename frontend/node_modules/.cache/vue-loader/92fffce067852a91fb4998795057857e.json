{"remainingRequest":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/src/views/Reservation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/src/views/Reservation.vue","mtime":1568151112274},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Datepicker from 'vuejs-datepicker'\nimport ReservationService from '../services/ReservationsService.vue'\nimport moment from 'moment'\n\nexport default {\n    name: 'reservation',\n    components: {\n        Datepicker,\n    },\n    data() {\n      return {\n        date: \"\",\n        showRooms: false,\n        reservations: [],\n        rooms: [],\n        disabledDates: {\n          to: new Date()\n        }\n      }\n    },\n    methods: {\n      makeReservation: function(name, roomName, date, timeStart, timeEnd)\n      {\n        ReservationService.createReservation(name, roomName, date, timeStart, timeEnd);\n      },\n      getAvailableReservations: function(date)\n      {\n        ReservationService.getAvailableReservations(date)\n        .then((data) =>\n        {\n          this.reservations = data;\n        });\n      },\n      parseDate: function(date)\n      {\n        this.date = moment(date).format(\"DD MMMM YYYY\");\n      },\n      getOpenTimes: function(name)\n      {\n        // fonction servant à récupérer les heures bloquées pour une salle donnée, retournant un array des horaires disponibles\n        let times = [];\n        let dispo = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n        for(let i = 0; i < this.reservations.length; i ++)\n        {\n          if(this.reservations[i].roomName == name)\n          {\n            times.push(this.reservations[i].timeStart);\n          }\n        }\n        for(let x = 0; x < times.length; x ++)\n        {\n          dispo.splice(dispo.indexOf(times[x]), 1);\n        }\n        return dispo;\n      }\n    },\n    created()\n    {\n      fetch('http://localhost:3030/rooms')\n      .then((response) =>\n      {\n      return response.json();\n      })\n      .then((data) =>\n      {\n      this.rooms = data;\n      })       \n    },\n    updated()\n    { \n      this.parseDate(this.date);\n      this.getAvailableReservations(this.date);\n    }\n}\n",{"version":3,"sources":["Reservation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reservation.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h1>coucou les zouzous</h1>\n    <Datepicker :disabled-dates=\"disabledDates\" @selected=\"showRooms = true\" v-model=\"date\"/>\n    <p>la date du jour est: {{ date }}</p>\n    <div v-if=\"this.showRooms === true\">\n      <ul>\n        <li v-for=\"reservation in reservations\" v-bind:key=\"reservation\">\n          <p> Resa 1: \"{{ reservation.name }}\", Salle: {{ reservation.roomName}} </p>\n          <p> date: {{ reservation.date}}, durée: {{ reservation.timeStart }} -- {{ reservation.timeEnd }} </p>\n        </li>\n      </ul>\n      <table>\n          <tr>\n            <th v-for=\"room in rooms\" v-bind:key=\"room\">\n              <h2>{{ room.name }}</h2>\n              <p> Description: \"{{ room.description }}\", Capacité: {{ room.capacity}} </p>\n              <p v-if=\"room.equipements[0] !== undefined\">Equipements: </p>\n              <ul v-for=\"equipement in room.equipements\" v-bind:key=\"equipement\">\n                  <li>\n                    {{equipement.name}}\n                  </li>\n              </ul>\n            </th>        \n          </tr>\n          <tr>\n            <td v-for=\"room in rooms\" v-bind:key=\"room\">\n              <ul v-for=\"value in getOpenTimes(room.name)\" v-bind:key=\"value\">\n                  <li>\n                    {{value}}\n                    <button class=\"buttons\" type=\"button\" name=\"button\" v-on:click=\"parseDate(date); makeReservation('banjo', room.name, date, value, value+1)\">make reservation</button>\n                  </li>\n              </ul>\n            </td>\n          </tr>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Datepicker from 'vuejs-datepicker'\nimport ReservationService from '../services/ReservationsService.vue'\nimport moment from 'moment'\n\nexport default {\n    name: 'reservation',\n    components: {\n        Datepicker,\n    },\n    data() {\n      return {\n        date: \"\",\n        showRooms: false,\n        reservations: [],\n        rooms: [],\n        disabledDates: {\n          to: new Date()\n        }\n      }\n    },\n    methods: {\n      makeReservation: function(name, roomName, date, timeStart, timeEnd)\n      {\n        ReservationService.createReservation(name, roomName, date, timeStart, timeEnd);\n      },\n      getAvailableReservations: function(date)\n      {\n        ReservationService.getAvailableReservations(date)\n        .then((data) =>\n        {\n          this.reservations = data;\n        });\n      },\n      parseDate: function(date)\n      {\n        this.date = moment(date).format(\"DD MMMM YYYY\");\n      },\n      getOpenTimes: function(name)\n      {\n        // fonction servant à récupérer les heures bloquées pour une salle donnée, retournant un array des horaires disponibles\n        let times = [];\n        let dispo = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n        for(let i = 0; i < this.reservations.length; i ++)\n        {\n          if(this.reservations[i].roomName == name)\n          {\n            times.push(this.reservations[i].timeStart);\n          }\n        }\n        for(let x = 0; x < times.length; x ++)\n        {\n          dispo.splice(dispo.indexOf(times[x]), 1);\n        }\n        return dispo;\n      }\n    },\n    created()\n    {\n      fetch('http://localhost:3030/rooms')\n      .then((response) =>\n      {\n      return response.json();\n      })\n      .then((data) =>\n      {\n      this.rooms = data;\n      })       \n    },\n    updated()\n    { \n      this.parseDate(this.date);\n      this.getAvailableReservations(this.date);\n    }\n}\n</script>"]}]}