{"remainingRequest":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/src/services/ReservationsService.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/src/services/ReservationsService.vue","mtime":1568196975440},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/thomasnc/Bureau/B2/Cours-node-js/BackendTestV2/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n//on stocke dans ce fichier toutes les fonctions qui vont se connecter aux endpoints de notre API REST.\n//encore une fois on en utilise uniquement une partie, mais le cadre de ce projet je les laisse telles quelles\nconst allReservationsUrl = 'http://localhost:5000/reservations';\nconst reservationUrl = 'http://localhost:5000/reservation';\n\nexport default {\n    getAllReservations(){\n        return fetch(allReservationsUrl)\n        .then((response) =>\n        {\n            return response.json();\n        })\n    },\n    getReservation(id){\n        return fetch(`${reservationUrl}${id}`)\n        .then((response) =>\n        {\n            return response.json();\n        })\n    },\n    getAvailableReservations(date)\n    {\n        return fetch(`${allReservationsUrl}-check${date}`)\n        .then((response) =>\n        {\n            return response.json();\n        })\n    },\n    deleteReservation(id){\n        return fetch(`${reservationUrl}${id}`, {\n            method: 'delete'\n        })\n        .then((response) => \n        {\n            return response.json();\n        })\n    },\n    updateReservation(id, name, roomName, date, timeStart, timeEnd){\n        return fetch(`${reservationUrl}${id}`, {\n            method: 'put',\n            headers: {\n                'accept' : 'application/json',\n                'content-type' : 'application/json'\n            },\n            body: JSON.stringify(\n            {\n                \"name\": name,\n                \"roomName\": roomName,\n                \"date\": date,\n                \"timeStart\": timeStart,\n                \"timeEnd\": timeEnd\n            })\n        })\n        .then((response) =>\n        {\n            return response.json();\n        })\n    },\n    createReservation(name, roomName, date, timeStart, timeEnd) {\n        return fetch(reservationUrl, {\n            method: 'post',\n            headers: {\n                'accept':'application/json',\n                'content-type':'application/json'\n            },\n            body: JSON.stringify(\n            {\n                \"name\": name,\n                \"roomName\": roomName,\n                \"date\": date,\n                \"timeStart\": timeStart,\n                \"timeEnd\": timeEnd\n            })\n        })\n        .then((response) =>\n        {\n            return response.json();\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n}\n",{"version":3,"sources":["ReservationsService.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReservationsService.vue","sourceRoot":"src/services","sourcesContent":["<script>\n//on stocke dans ce fichier toutes les fonctions qui vont se connecter aux endpoints de notre API REST.\n//encore une fois on en utilise uniquement une partie, mais le cadre de ce projet je les laisse telles quelles\nconst allReservationsUrl = 'http://localhost:5000/reservations';\nconst reservationUrl = 'http://localhost:5000/reservation';\n\nexport default {\n    getAllReservations(){\n        return fetch(allReservationsUrl)\n        .then((response) =>\n        {\n            return response.json();\n        })\n    },\n    getReservation(id){\n        return fetch(`${reservationUrl}${id}`)\n        .then((response) =>\n        {\n            return response.json();\n        })\n    },\n    getAvailableReservations(date)\n    {\n        return fetch(`${allReservationsUrl}-check${date}`)\n        .then((response) =>\n        {\n            return response.json();\n        })\n    },\n    deleteReservation(id){\n        return fetch(`${reservationUrl}${id}`, {\n            method: 'delete'\n        })\n        .then((response) => \n        {\n            return response.json();\n        })\n    },\n    updateReservation(id, name, roomName, date, timeStart, timeEnd){\n        return fetch(`${reservationUrl}${id}`, {\n            method: 'put',\n            headers: {\n                'accept' : 'application/json',\n                'content-type' : 'application/json'\n            },\n            body: JSON.stringify(\n            {\n                \"name\": name,\n                \"roomName\": roomName,\n                \"date\": date,\n                \"timeStart\": timeStart,\n                \"timeEnd\": timeEnd\n            })\n        })\n        .then((response) =>\n        {\n            return response.json();\n        })\n    },\n    createReservation(name, roomName, date, timeStart, timeEnd) {\n        return fetch(reservationUrl, {\n            method: 'post',\n            headers: {\n                'accept':'application/json',\n                'content-type':'application/json'\n            },\n            body: JSON.stringify(\n            {\n                \"name\": name,\n                \"roomName\": roomName,\n                \"date\": date,\n                \"timeStart\": timeStart,\n                \"timeEnd\": timeEnd\n            })\n        })\n        .then((response) =>\n        {\n            return response.json();\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n}\n</script>"]}]}